// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Year {
  id                      String @id @default(uuid())
  name                    String @unique
  // gm_year Int [ref: > player.id, note: "GM of the year"]
  // ceasar Int [ref: > player.id]
  // consul Int [ref: > player.id]
  // praetor Int [ref: > player.id]
  // sportmanship Int [ref: > player.id]

  conventions             Convention[]
  tournamentsStarting     Tournament[] @relation("membershipYear")
  tournamentsFinishing    Tournament[] @relation("laurelYear")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  // "Ideally the badge number but the first convention was reusing the badge number. May be we should still use it and have a backup for them"
  id          String     @id @default(uuid())
  firstName   String?
  badgeNumber String
  picture     String?

  tournamentsGMd Tournament[]
  standings      Standing[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Convention {
  id        String      @id @default(uuid())
  year      Year        @relation(fields: [yearId], references: [id])
  yearId    String
  type      String // Eg. WBC
  location  String
  startDate DateTime
  endDate   DateTime
  // bestTeam int [ref: > team.id]

  tournaments Tournament[]
}

model Game {
  id          String          @id @default(uuid())
  name        String
  picture     String
  tournaments Tournament[]
  // scoreSystem int [note: "Create an Enum"]
}

model Tournament {
  id                   String         @id @default(uuid())
  name                 String
  game                 Game        @relation(fields: [gameId], references: [id])
  gameId               String
  membershipYear       Year        @relation(name: "membershipYear", fields: [membershipYearId], references: [id])
  membershipYearId     String
  laurelYear           Year        @relation(name: "laurelYear", fields: [laurelYearId], references: [id])
  laurelYearId         String
  convention           Convention? @relation(fields: [conventionId], references: [id])
  conventionId         String
  // type int [note: "Create an Enum"]
  playerPerTable       Int
  missingPlayerApproch Int // [note: "-1 or 1"]
  tournamentGm         Player      @relation(fields: [gmId], references: [id])
  gmId                 String
  previewUrl           String
  reportUrl            String
  numberOfPlayers      Int
  standings            Standing[]
}

model Standing {
  id           Int        @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId String
  player       Player     @relation(fields: [playerId], references: [id])
  playerId     String
  position     Int
  laurel       Int
  plaque       Boolean
}
